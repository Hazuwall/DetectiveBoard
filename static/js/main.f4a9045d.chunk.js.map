{"version":3,"sources":["constants/ActionTypes.js","constants/ToolTypes.js","constants/ItemTypes.js","reducers/items.js","reducers/index.js","reducers/board.js","actions/index.js","components/DraggableItemBox.js","components/Pin.js","components/Rope.js","components/Board.js","components/Tool.js","components/Toolbar.js","components/App.js","serviceWorker.js","index.js"],"names":["ActionTypes","ToolTypes","ItemTypes","setSelection","items","id","isSelected","map","item","combineReducers","board","state","toolType","action","type","selectedItem","pins","nodes","reduce","maxId","Math","max","x","y","ropes","node1","node2","itemType","filter","t","oldSelectedItem","unselectedList","clickSpaceWithTool","dispatch","getState","boardState","addPin","unselectItem","selectItemWithTool","removeItem","some","addRope","selectItem","DraggableItemBox","connect","canSelect","tool","onDrag","moveItem","moveNode","onSelect","children","useDrag","collect","monitor","isDragging","end","result","getDropResult","delta","drag","className","onClick","e","stopPropagation","style","left","top","opacity","cursor","ref","Pin","width","height","viewBox","version","fill","xmlns","cx","cy","r","Rope","x1","y1","x2","y2","stroke","getNodePos","node","find","Board","nativeEvent","offsetX","offsetY","onDrop","useDrop","accept","drop","getItem","getDifferenceFromInitialOffset","key","Tool","currentToolType","onToggle","text","backgroundColor","Toolbar","App","Boolean","window","location","hostname","match","store","createStore","reducer","applyMiddleware","thunk","logger","ReactDOM","render","StrictMode","DndProvider","backend","HTML5Backend","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.f4a9045d.chunk.js","sourcesContent":["export const ActionTypes = {\r\n  ADD_PIN: \"ADD_PIN\",\r\n  ADD_ROPE: \"ADD_ROPE\",\r\n  TOGGLE_TOOL: \"TOGGLE_TOOL\",\r\n  MOVE_ITEM: \"MOVE_ITEM\",\r\n  MOVE_NODE: \"MOVE_NODE\",\r\n  REMOVE_ITEM: \"REMOVE_ITEM\",\r\n  SELECT_ITEM: \"SELECT_ITEM\",\r\n  UNSELECT_ITEM: \"UNSELECT_ITEM\",\r\n};\r\n","export const ToolTypes = {\r\n  ADD_PIN_TOOL: \"ADD_PIN_TOOL\",\r\n  MOVE_TOOL: \"MOVE_TOOL\",\r\n  REMOVE_TOOL: \"REMOVE_TOOL\",\r\n  TIE_ROPE_TOOL: \"TIE_ROPE_TOOL\",\r\n};\r\n\r\nexport const isSelectTool = (tool) => {\r\n  return tool === ToolTypes.REMOVE_TOOL || tool === ToolTypes.TIE_ROPE_TOOL;\r\n};\r\n","export const ItemTypes = {\r\n  PIN: \"PIN\",\r\n  ROPE: \"ROPE\",\r\n};\r\n","import { ActionTypes } from \"../constants/ActionTypes\";\r\nimport { ItemTypes } from \"../constants/ItemTypes\";\r\n\r\nfunction setSelection(items, id, isSelected) {\r\n  return items.map((item) => (item.id === id ? { ...item, isSelected } : item));\r\n}\r\n\r\nexport default function items(\r\n  state = {\r\n    selectedItem: null,\r\n    [ItemTypes.PIN]: [],\r\n    nodes: [],\r\n    [ItemTypes.ROPE]: [],\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ActionTypes.ADD_PIN:\r\n      const pins = state[ItemTypes.PIN];\r\n      const nodes = state.nodes;\r\n      const id = pins.reduce((maxId, item) => Math.max(item.id, maxId), 0) + 1;\r\n      return {\r\n        ...state,\r\n        [ItemTypes.PIN]: [\r\n          ...pins,\r\n          {\r\n            id,\r\n            x: action.x,\r\n            y: action.y,\r\n            isSelected: false,\r\n          },\r\n        ],\r\n        nodes: [\r\n          ...nodes,\r\n          {\r\n            id,\r\n            x: action.x,\r\n            y: action.y,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case ActionTypes.ADD_ROPE:\r\n      const ropes = state[ItemTypes.ROPE];\r\n      return {\r\n        ...state,\r\n        [ItemTypes.ROPE]: [\r\n          ...ropes,\r\n          {\r\n            id: ropes.reduce((maxId, item) => Math.max(item.id, maxId), 0) + 1,\r\n            node1: action.node1,\r\n            node2: action.node2,\r\n            isSelected: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case ActionTypes.MOVE_ITEM:\r\n      return {\r\n        ...state,\r\n        [action.itemType]: state[action.itemType].map((item) =>\r\n          item.id === action.id ? { ...item, x: action.x, y: action.y } : item\r\n        ),\r\n      };\r\n\r\n    case ActionTypes.MOVE_NODE:\r\n      return {\r\n        ...state,\r\n        nodes: state.nodes.map((item) =>\r\n          item.id === action.id ? { ...item, x: action.x, y: action.y } : item\r\n        ),\r\n      };\r\n\r\n    case ActionTypes.REMOVE_ITEM:\r\n      if (action.itemType === ItemTypes.PIN) {\r\n        return {\r\n          ...state,\r\n          [action.itemType]: state[action.itemType].filter(\r\n            (t) => t.id !== action.id\r\n          ),\r\n          nodes: state.nodes.filter((t) => t.id !== action.id),\r\n          [ItemTypes.ROPE]: state[ItemTypes.ROPE].filter(\r\n            (t) => t.node1 !== action.id && t.node2 !== action.id\r\n          ),\r\n        };\r\n      } else {\r\n        return {\r\n          ...state,\r\n          [action.itemType]: state[action.itemType].filter(\r\n            (t) => t.id !== action.id\r\n          ),\r\n        };\r\n      }\r\n\r\n    case ActionTypes.SELECT_ITEM: {\r\n      const selectedItem = {\r\n        id: action.id,\r\n        itemType: action.itemType,\r\n      };\r\n      const oldSelectedItem = state.selectedItem;\r\n      if (oldSelectedItem !== null) {\r\n        const unselectedList = setSelection(\r\n          state[oldSelectedItem.itemType],\r\n          oldSelectedItem.id,\r\n          false\r\n        );\r\n        if (oldSelectedItem.itemType === action.itemType) {\r\n          return {\r\n            ...state,\r\n            selectedItem,\r\n            [action.itemType]: setSelection(unselectedList, action.id, true),\r\n          };\r\n        } else {\r\n          return {\r\n            ...state,\r\n            selectedItem,\r\n            [action.itemType]: setSelection(\r\n              state[action.itemType],\r\n              action.id,\r\n              true\r\n            ),\r\n            [state.selectedItem.itemType]: unselectedList,\r\n          };\r\n        }\r\n      } else\r\n        return {\r\n          ...state,\r\n          selectedItem,\r\n          [action.itemType]: setSelection(\r\n            state[action.itemType],\r\n            action.id,\r\n            true\r\n          ),\r\n        };\r\n    }\r\n\r\n    case ActionTypes.UNSELECT_ITEM:\r\n    case ActionTypes.TOGGLE_TOOL: {\r\n      const oldSelectedItem = state.selectedItem;\r\n      if (state.selectedItem === null) {\r\n        return state;\r\n      } else {\r\n        return {\r\n          ...state,\r\n          selectedItem: null,\r\n          [oldSelectedItem.itemType]: setSelection(\r\n            state[oldSelectedItem.itemType],\r\n            oldSelectedItem.id,\r\n            false\r\n          ),\r\n        };\r\n      }\r\n    }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { combineReducers } from \"redux\";\r\nimport board from \"./board\";\r\nimport items from \"./items\";\r\n\r\nexport default combineReducers({ board, items });\r\n","import { ActionTypes } from \"../constants/ActionTypes\";\r\nimport { ToolTypes } from \"../constants/ToolTypes\";\r\n\r\nexport default function board(\r\n  state = {\r\n    toolType: ToolTypes.MOVE_TOOL,\r\n  },\r\n  action\r\n) {\r\n  switch (action.type) {\r\n    case ActionTypes.TOGGLE_TOOL:\r\n      return {\r\n        ...state,\r\n        toolType:\r\n          state.toolType === action.toolType\r\n            ? ToolTypes.MOVE_TOOL\r\n            : action.toolType,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n","import { ActionTypes } from \"../constants/ActionTypes\";\r\nimport { ItemTypes } from \"../constants/ItemTypes\";\r\nimport { ToolTypes } from \"../constants/ToolTypes\";\r\n\r\nexport const addPin = (x, y) => ({\r\n  type: ActionTypes.ADD_PIN,\r\n  x,\r\n  y,\r\n});\r\n\r\nexport const clickSpaceWithTool = (x, y) => (dispatch, getState) => {\r\n  const boardState = getState().board;\r\n  if (boardState.toolType === ToolTypes.ADD_PIN_TOOL)\r\n    return dispatch(addPin(x, y));\r\n  else if (boardState.selectedItem !== null) return dispatch(unselectItem());\r\n};\r\n\r\nexport const addRope = (node1, node2) => ({\r\n  type: ActionTypes.ADD_ROPE,\r\n  node1,\r\n  node2,\r\n});\r\n\r\nexport const toggleTool = (toolType) => ({\r\n  type: ActionTypes.TOGGLE_TOOL,\r\n  toolType,\r\n});\r\n\r\nexport const moveItem = (id, itemType, x, y) => ({\r\n  type: ActionTypes.MOVE_ITEM,\r\n  id,\r\n  itemType,\r\n  x,\r\n  y,\r\n});\r\n\r\nexport const moveNode = (id, x, y) => ({\r\n  type: ActionTypes.MOVE_NODE,\r\n  id,\r\n  x,\r\n  y,\r\n});\r\n\r\nexport const removeItem = (id, itemType) => ({\r\n  type: ActionTypes.REMOVE_ITEM,\r\n  id,\r\n  itemType,\r\n});\r\n\r\nexport const selectItem = (id, itemType) => ({\r\n  type: ActionTypes.SELECT_ITEM,\r\n  id,\r\n  itemType,\r\n});\r\n\r\nfunction containsRope(ropes, node1, node2) {\r\n  return ropes.some(\r\n    (t) =>\r\n      (t.node1 === node1 && t.node2 === node2) ||\r\n      (t.node1 === node2 && t.node2 === node1)\r\n  );\r\n}\r\n\r\nexport const selectItemWithTool = (id, itemType) => (dispatch, getState) => {\r\n  const state = getState();\r\n  const selectedItem = state.items.selectedItem;\r\n  switch (state.board.toolType) {\r\n    case ToolTypes.REMOVE_TOOL:\r\n      return dispatch(removeItem(id, itemType));\r\n\r\n    case ToolTypes.TIE_ROPE_TOOL:\r\n      if (itemType === ItemTypes.PIN) {\r\n        if (\r\n          selectedItem !== null &&\r\n          selectedItem.itemType === ItemTypes.PIN &&\r\n          selectedItem.id !== id\r\n        ) {\r\n          if (!containsRope(state.items[ItemTypes.ROPE], id, selectedItem.id))\r\n            dispatch(addRope(id, selectedItem.id));\r\n        }\r\n        return dispatch(selectItem(id, itemType));\r\n      }\r\n      return;\r\n\r\n    default:\r\n      return;\r\n  }\r\n};\r\n\r\nexport const unselectItem = (id, itemType) => ({\r\n  type: ActionTypes.UNSELECT_ITEM,\r\n  id,\r\n  itemType,\r\n});\r\n","import { useDrag } from \"react-dnd\";\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { moveItem, moveNode, selectItemWithTool } from \"../actions\";\r\nimport \"./DraggableItemBox.css\";\r\nimport { isSelectTool } from \"../constants/ToolTypes\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    canSelect: isSelectTool(state.board.toolType),\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onDrag: (id, itemType, x, y) => {\r\n      dispatch(moveItem(id, itemType, x, y));\r\n      dispatch(moveNode(id, x, y));\r\n    },\r\n    onSelect: (id, itemType) => {\r\n      dispatch(selectItemWithTool(id, itemType));\r\n    },\r\n  };\r\n};\r\n\r\nconst DraggableItemBox = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(\r\n  ({\r\n    id,\r\n    itemType,\r\n    x,\r\n    y,\r\n    isSelected,\r\n    canSelect,\r\n    onDrag,\r\n    onSelect,\r\n    children,\r\n  }) => {\r\n    const [{ isDragging }, drag] = useDrag({\r\n      item: { type: itemType, id },\r\n      collect: (monitor) => ({\r\n        isDragging: !!monitor.isDragging(),\r\n      }),\r\n      end: (item, monitor) => {\r\n        const result = monitor.getDropResult();\r\n        if (result) {\r\n          const delta = result.delta;\r\n          onDrag(id, itemType, x + delta.x, y + delta.y);\r\n        }\r\n      },\r\n    });\r\n\r\n    const handleClick = (e) => {\r\n      onSelect(id, itemType);\r\n      e.stopPropagation();\r\n    };\r\n\r\n    return (\r\n      <div\r\n        className=\"draggable-item-box\"\r\n        onClick={handleClick}\r\n        style={{\r\n          left: x,\r\n          top: y,\r\n          opacity: isDragging ? 0.5 : 1,\r\n          cursor: canSelect ? \"pointer\" : \"move\",\r\n        }}\r\n        ref={drag}\r\n      >\r\n        {children}\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nDraggableItemBox.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n  itemType: PropTypes.string.isRequired,\r\n  children: PropTypes.node.isRequired,\r\n};\r\n\r\nexport default DraggableItemBox;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport DraggableItemBox from \"./DraggableItemBox\";\r\nimport { ItemTypes } from \"../constants/ItemTypes\";\r\n\r\nfunction Pin({ id, x, y, isSelected }) {\r\n  return (\r\n    <DraggableItemBox\r\n      id={id}\r\n      itemType={ItemTypes.PIN}\r\n      x={x}\r\n      y={y}\r\n      isSelected={isSelected}\r\n    >\r\n      <svg\r\n        width=\"25px\"\r\n        height=\"25px\"\r\n        viewBox=\"0 0 100 100\"\r\n        version=\"1.1\"\r\n        fill={isSelected ? \"yellow\" : \"blue\"}\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        <circle cx=\"50\" cy=\"50\" r=\"50\" />\r\n      </svg>\r\n    </DraggableItemBox>\r\n  );\r\n}\r\n\r\nPin.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  x: PropTypes.number.isRequired,\r\n  y: PropTypes.number.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Pin;\r\n","import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { ItemTypes } from \"../constants/ItemTypes\";\r\nimport { selectItemWithTool } from \"../actions\";\r\nimport { ToolTypes } from \"../constants/ToolTypes\";\r\nimport \"./Rope.css\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    canSelect: state.board.toolType === ToolTypes.REMOVE_TOOL,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onSelect: (id) => {\r\n      dispatch(selectItemWithTool(id, ItemTypes.ROPE));\r\n    },\r\n  };\r\n};\r\n\r\nconst Rope = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(({ id, node1, node2, isSelected, canSelect, onSelect }) => {\r\n  const handleClick = (e) => {\r\n    onSelect(id);\r\n    e.stopPropagation();\r\n  };\r\n\r\n  return (\r\n    <line\r\n      className=\"rope\"\r\n      onClick={handleClick}\r\n      x1={node1.x}\r\n      y1={node1.y}\r\n      x2={node2.x}\r\n      y2={node2.y}\r\n      stroke={isSelected ? \"yellow\" : \"red\"}\r\n      cursor={canSelect ? \"pointer\" : \"auto\"}\r\n    />\r\n  );\r\n});\r\n\r\nRope.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n  node1: PropTypes.object.isRequired,\r\n  node2: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Rope;\r\n","import React from \"react\";\r\nimport { useDrop } from \"react-dnd\";\r\nimport { connect } from \"react-redux\";\r\nimport \"./Board.css\";\r\nimport { ItemTypes } from \"../constants/ItemTypes\";\r\nimport Pin from \"./Pin\";\r\nimport { moveItem, clickSpaceWithTool } from \"../actions\";\r\nimport Rope from \"./Rope\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { items: state.items };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onClick: (e) => {\r\n      dispatch(\r\n        clickSpaceWithTool(e.nativeEvent.offsetX, e.nativeEvent.offsetY)\r\n      );\r\n    },\r\n  };\r\n};\r\n\r\nconst getNodePos = (id, nodes) => {\r\n  const node = nodes.find((t) => t.id === id);\r\n  return { x: node.x, y: node.y };\r\n};\r\n\r\nconst Board = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(({ onDrop, onClick, items }) => {\r\n  const [, drop] = useDrop({\r\n    accept: ItemTypes.PIN,\r\n    drop: (item, monitor) => {\r\n      const { id, type } = monitor.getItem();\r\n      const delta = monitor.getDifferenceFromInitialOffset();\r\n      return { delta };\r\n    },\r\n  });\r\n\r\n  return (\r\n    <div onClick={onClick} ref={drop} className=\"board\">\r\n      <svg\r\n        className=\"svg-container\"\r\n        viewBox=\"0 0 800 800\"\r\n        version=\"1.1\"\r\n        xmlns=\"http://www.w3.org/2000/svg\"\r\n      >\r\n        {items[ItemTypes.ROPE].map((item) => {\r\n          return (\r\n            <Rope\r\n              key={item.id}\r\n              id={item.id}\r\n              node1={getNodePos(item.node1, items.nodes)}\r\n              node2={getNodePos(item.node2, items.nodes)}\r\n              isSelected={item.isSelected}\r\n            />\r\n          );\r\n        })}\r\n      </svg>\r\n      {items[ItemTypes.PIN].map((item) => {\r\n        return (\r\n          <Pin\r\n            key={item.id}\r\n            id={item.id}\r\n            x={item.x}\r\n            y={item.y}\r\n            isSelected={item.isSelected}\r\n          />\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n});\r\n\r\nexport default Board;\r\n","import React from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"./Toolbar.css\";\r\nimport { toggleTool } from \"../actions\";\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { currentToolType: state.board.toolType };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    onToggle: (type) => {\r\n      dispatch(toggleTool(type));\r\n    },\r\n  };\r\n};\r\n\r\nconst Tool = connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(({ onToggle, currentToolType, toolType, text }) => {\r\n  return (\r\n    <div>\r\n      <button\r\n        style={{\r\n          backgroundColor: toolType === currentToolType ? \"red\" : \"grey\",\r\n        }}\r\n        onClick={() => onToggle(toolType)}\r\n      >\r\n        {text}\r\n      </button>\r\n    </div>\r\n  );\r\n});\r\n\r\nTool.propTypes = {\r\n  toolType: PropTypes.string.isRequired,\r\n  text: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Tool;\r\n","import React from \"react\";\r\nimport \"./Toolbar.css\";\r\nimport Tool from \"./Tool\";\r\nimport { ToolTypes } from \"../constants/ToolTypes\";\r\n\r\nconst Toolbar = () => {\r\n  return (\r\n    <div className=\"toolbar\">\r\n      <Tool text=\"Move\" toolType={ToolTypes.MOVE_TOOL} />\r\n      <Tool text=\"AddPin\" toolType={ToolTypes.ADD_PIN_TOOL} />\r\n      <Tool text=\"TieRope\" toolType={ToolTypes.TIE_ROPE_TOOL} />\r\n      <Tool text=\"Remove\" toolType={ToolTypes.REMOVE_TOOL} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Toolbar;\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport Board from \"./Board\";\r\nimport Toolbar from \"./Toolbar\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"app\">\r\n      <Toolbar />\r\n      <Board />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { DndProvider } from \"react-dnd\";\r\nimport { HTML5Backend } from \"react-dnd-html5-backend\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport { Provider } from \"react-redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport logger from \"redux-logger\";\r\nimport reducer from \"./reducers\";\r\nimport \"./index.css\";\r\nimport App from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nconst store = createStore(reducer, applyMiddleware(thunk, logger));\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <App />\r\n      </DndProvider>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}